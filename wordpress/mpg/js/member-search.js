// Generated by CoffeeScript 1.6.2
(function() {
  var FieldDefinition, FieldDefinitionsDb, LatestMembersDb, Member, MemberSearchViewModel, MembersDb,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.$ = jQuery;

  MemberSearchViewModel = (function(_super) {
    __extends(MemberSearchViewModel, _super);

    function MemberSearchViewModel() {
      var _this = this;

      MemberSearchViewModel.__super__.constructor.apply(this, arguments);
      this.membersDb = new MembersDb(this);
      this.latestMembersDb = new LatestMembersDb(this);
      this.latestMembersDb.load(false);
      this.fieldDefinitionsDb = new FieldDefinitionsDb(this);
      this.fieldDefinitionsDb.load(false, function() {
        return _this.fieldDefinitionsDb.setupSearchOptions();
      });
    }

    MemberSearchViewModel.prototype.deselectLetters = function() {
      return jQuery('.membersearch-alpha a').removeClass('alpha-active');
    };

    return MemberSearchViewModel;

  })(ViewModel);

  FieldDefinitionsDb = (function(_super) {
    __extends(FieldDefinitionsDb, _super);

    function FieldDefinitionsDb(viewModel) {
      FieldDefinitionsDb.__super__.constructor.call(this, viewModel, 'fieldDefinition', "/api/field_definitions.json");
      this.roles = ko.observableArray([]);
      this.genres = ko.observableArray([]);
      this.facilities = ko.observableArray([]);
      this.instruments = ko.observableArray([]);
    }

    FieldDefinitionsDb.prototype.newItem = function(id) {
      return new FieldDefinition(id, this);
    };

    FieldDefinitionsDb.prototype.itemDataFrom = function(data) {
      return data.fieldDefinitions;
    };

    FieldDefinitionsDb.prototype.setupSearchOptions = function() {
      var field;

      field = this.fieldCalled('roles');
      if (field != null) {
        this.roles(field.options());
      }
      field = this.fieldCalled('genres');
      if (field != null) {
        this.genres(field.options());
      }
      field = this.fieldCalled('instruments');
      if (field != null) {
        this.instruments(field.options());
      }
      field = this.fieldCalled('facilities');
      if (field != null) {
        return this.facilities(field.options());
      }
    };

    FieldDefinitionsDb.prototype.fieldCalled = function(name) {
      var field, _i, _len, _ref;

      _ref = this.items();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field = _ref[_i];
        if (field.name() === name) {
          return field;
        }
      }
      return null;
    };

    return FieldDefinitionsDb;

  })(Db);

  LatestMembersDb = (function(_super) {
    __extends(LatestMembersDb, _super);

    function LatestMembersDb(viewModel) {
      LatestMembersDb.__super__.constructor.call(this, viewModel, 'latestMember', "/api/members_directory/latest_members/6.json");
    }

    LatestMembersDb.prototype.newItem = function(id) {
      return new Member(id, this);
    };

    LatestMembersDb.prototype.itemDataFrom = function(data) {
      return data.members;
    };

    return LatestMembersDb;

  })(Db);

  MembersDb = (function(_super) {
    __extends(MembersDb, _super);

    function MembersDb(viewModel) {
      this.doSearch = __bind(this.doSearch, this);
      var _this = this;

      MembersDb.__super__.constructor.call(this, viewModel, 'member', "/api/members_directory/members_search.json");
      this.lastName = ko.observable('');
      this.lastName.subscribe(function(value) {
        return _this.viewModel.deselectLetters();
      });
      this.acceptsInterns = ko.observable(false);
      this.roles = ko.observableArray([]);
      this.genres = ko.observableArray([]);
      this.instruments = ko.observableArray([]);
      this.facilities = ko.observableArray([]);
    }

    MembersDb.prototype.doSearch = function() {
      var baseUrl;

      baseUrl = "/api/members_directory/members_search.json?z=z";
      if (this.lastName() !== '') {
        baseUrl = baseUrl + ("&last_name=" + (this.lastName()));
      }
      if (this.acceptsInters()) {
        baseUrl = baseUrl + "&accepts_interns=true";
      }
      this.url(baseUrl);
      this.items.removeAll();
      return this.load(false);
    };

    MembersDb.prototype.newItem = function(id) {
      return new Member(id, this);
    };

    MembersDb.prototype.itemDataFrom = function(data) {
      return data.members;
    };

    return MembersDb;

  })(Db);

  Member = (function(_super) {
    __extends(Member, _super);

    function Member(id, db) {
      Member.__super__.constructor.call(this, id, db);
      this.firstName = ko.observable('');
      this.lastName = ko.observable('');
      this.name = ko.observable('');
      this.email = ko.observable('');
      this.skype = ko.observable('');
      this.facebook = ko.observable('');
      this.twitter = ko.observable('');
      this.webAddress = ko.observable('');
      this.subscriptionPlan = ko.observable('');
      this.biography = ko.observable('');
      this.createdAt = ko.observable(null);
      this.managementName = ko.observable('');
      this.managementCompany = ko.observable('');
      this.managementEmail = ko.observable('');
    }

    Member.prototype.updateAttributes = function(data) {
      this.firstName(data.firstName);
      this.lastName(data.lastName);
      this.name(data.name);
      this.email(data.email);
      this.skype(data.skype);
      this.facebook(data.facebook);
      this.twitter(data.twitter);
      this.webAddress(data.webAddress);
      this.subscriptionPlan(data.subscriptionPlan);
      this.biography(data.biography);
      this.createdAt(data.createdAt);
      this.managementName(data.managementName);
      this.managementCompany(data.managementCompany);
      return this.managementEmail(data.managementEmail);
    };

    return Member;

  })(Model);

  FieldDefinition = (function(_super) {
    __extends(FieldDefinition, _super);

    function FieldDefinition(id, db) {
      FieldDefinition.__super__.constructor.call(this, id, db);
      this.name = ko.observable('');
      this.label = ko.observable('');
      this.kind = ko.observable('');
      this.options = ko.observableArray([]);
    }

    FieldDefinition.prototype.updateAttributes = function(data) {
      this.name(data.name);
      this.label(data.label);
      this.kind(data.kind);
      return this.options(data.options);
    };

    return FieldDefinition;

  })(Model);

  window.viewModel = new MemberSearchViewModel;

  jQuery(document).ready(function() {
    ko.applyBindings(viewModel);
    return jQuery('.membersearch-alpha a').on('click', function(event) {
      viewModel.membersDb.lastName(jQuery(this).html());
      return jQuery(this).addClass('alpha-active');
    });
  });

}).call(this);
